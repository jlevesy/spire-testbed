---
apiVersion: v1
kind: Namespace
metadata:
  name: traefik-internal
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: traefik-internal
spec:
  controller: traefik.io/ingress-controller
---
# Source: traefik/templates/rbac/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: traefik-internal
  namespace: traefik-internal
  labels:
    app.kubernetes.io/name: traefik-internal
---
# Source: traefik/templates/rbac/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-internal
  labels:
    app.kubernetes.io/name: traefik-internal
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - middlewares
      - middlewaretcps
      - tlsoptions
      - tlsstores
      - traefikservices
      - serverstransports
    verbs:
      - get
      - list
      - watch
---
# Source: traefik/templates/rbac/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-internal
  labels:
    app.kubernetes.io/name: traefik-internal
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-internal
subjects:
  - kind: ServiceAccount
    name: traefik-internal
    namespace: traefik-internal
---
# Source: traefik/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-internal
  namespace: traefik-internal
  labels:
    app.kubernetes.io/name: traefik-internal
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik-internal
      app.kubernetes.io/instance: traefik-internal
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9100"
      labels:
        app.kubernetes.io/name: traefik-internal
        app.kubernetes.io/instance: traefik-internal
    spec:
      serviceAccountName: traefik-internal
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      containers:
      - image: "jlevesy/traefik:poc-spiffe-support-server"
        imagePullPolicy: Always
        name: traefik
        resources:
        readinessProbe:
          httpGet:
            path: /ping
            port: 9000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 9000
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - name: https
          containerPort: 8443
          protocol: TCP
        - name: metrics
          containerPort: 9100
          protocol: TCP
        - name: traefik
          containerPort: 9000
          protocol: TCP
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        volumeMounts:
          - name: data
            mountPath: /data
          - name: tmp
            mountPath: /tmp
          # This.
          - name: spire-agent-socket
            mountPath: /run/spire/sockets
            readOnly: true
        args:
          - "--global.checknewversion"
          - "--global.sendanonymoususage"
          - "--entrypoints.metrics.address=:9100/tcp"
          - "--entrypoints.spiffe.address=:8443/tcp"
          - "--entrypoints.traefik.address=:9000/tcp"
          - "--ping=true"
          - "--log.level=DEBUG"
          - "--accesslog=true"
          - "--metrics.prometheus=true"
          - "--metrics.prometheus.entrypoint=metrics"
          - "--providers.kubernetescrd"
          - "--providers.kubernetesingress"
          - "--providers.kubernetesingress.ingressclass=traefik-internal"
          # This.
          - "--spiffe.workloadapiaddr=unix:///run/spire/sockets/agent.sock"
      volumes:
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
      securityContext:
        fsGroup: 65532
---
# Source: traefik/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: traefik-internal
  namespace: traefik-internal
  labels:
    app.kubernetes.io/name: traefik-internal
  annotations:
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: traefik-internal
    app.kubernetes.io/instance: traefik-internal
  ports:
  - port: 8443
    name: spiffe
    targetPort: spiffe
    protocol: TCP
